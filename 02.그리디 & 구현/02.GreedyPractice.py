'''
 어떠한 수 N 이 1이 될 때 까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다.
 단, 두 번째 연산은 N 이 K 로 나누어 떨어질 때만 선택할 수 있습니다.

 1. N 에서 1 을 뺍니다.
 2. N 을 K 로 나눕니다.

 예를 들어 N = 17, K = 4 라고 가정합시다. 이 때 1번의 과정을 한 번 수행하면 N 은 16이 됩니다.
 이후에 2번 과정을 두 번 수행하면 N 은 1이 됩니다. 결과적으로 이 경우 전체 과정을 실행한 횟수가 3이 되고,
 이는 N 을 1로 만드는 최소 횟수입니다.

 N 과 K 가 주어질 때 N 이 1이 될 때 까지 1번 혹은 2번 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하세요

 [입력 조건] 첫째 줄에 N (1<=N<=100,000) 과 K (2<=K<=100,000) 가 공백을 기준으로 하여 각각 자연수로 주어집니다.
 [출력 조건] 첫째 줄에 N 이 1이 될 때까지 1번 혹은 2번 과정을 수행해야 하는 횟수의 최솟값을 출력합니다.

 [입력 예시] 25 5
 [출력 예시] 2
'''

n, k = map(int, input().split())
count = 0
while n != 1:
    if n % k == 0:
        n /= k
        count += 1
    else:
        n -= 1
        count += 1

print(count)
