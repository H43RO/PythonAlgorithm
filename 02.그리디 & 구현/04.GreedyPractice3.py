"""
 한 마을에 모험가가 N 명 있습니다. 모험가 길드에서는 N 명의 모험가를 대상으로 '공포도'를 특정했는데,
 '공포도' 가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어집니다.

 모험가 길드장인 현준이는 모험가 그룹을 안전하게 구성하고자 공포도가 X 인 모험가는
 반드시 X 명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정했습니다.

 현준이는 최대 몇 개의 모험가 그룹을 만들 수 있는지 궁금합니다. N 명의 모험가에 대한
 정보가 주어졌을 때, 여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성하세요.

 예를 들어 N = 5 이고, 각 모험가의 공포도가 다음과 같다고 가정합시다.
 -> 2 3 1 2 2

 이 경우 그룹 1에 공포도가 1, 2, 3인 모험가를 한 명씩 넣고,
 그룹 2에 공포도가 2인 남은 두 명을 넣게 되면 총 2개의 그룹을 만들 수 있습니다.

 또한 몇 명의 모험가는 마을에 그대로 남아 있어도 되기 때문에, 모든 모험가를
 특정한 그룹에 넣을 필요는 없습니다.

 [입력 조건] 첫째 줄에 모험가의 수 N 이 주어집니다. (1 <= N <= 100,000)
           둘째 줄에 각 모험가의 공포도 값을 N 이하의 자연수로 주어지며, 각 자연수는 공백으로 구분합니다.
 [출력 조건] 여행을 떠날 수 있는 그룹의 최댓값을 출력합니다.

 [입력 예시] 5 / 2 3 1 2 2
 [출력 예시] 2

"""

n = input()
stat = list(map(int, input().split()))
stat.sort()  # 오름차 순으로 정렬하여 최소한의 모험가 수로 이루어진 그룹 결성 가능

result = 0  # 총 그룹 수
count = 0  # 현재 그룹에 포함된 모험가의 수

for i in stat:  # 공포도 낮은 모험가부터 탐색
    count += 1  # 현재 그룹에 해당 모험가 포함
    if count >= i:  # 만약 그룹원 수와 현재 바라보는 모험가의 공포도가 같다면
        result += 1 # 그룹 하나 결성되어 총 그룹 수 1 증가
        count = 0   # 현재 그룹에 포함된 모험가 수 초기화

print(result)




