"""
 N 종류의 화폐가 있습니다. 이 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 M 원이 되도록 하려고 합니다.
 이때 각 종류의 화폐는 몇 개라도 사용할 수 있습니다.

 예를들어 2원, 3원 단위의 화폐가 있을 때는 15원을 만들기 위해 3원을 5개 사용하는 것이 가장 최소한의 화폐 개수입니다.

 M 원을 만들기 위한 최소한의 화폐 개수를 출력하는 프로그램을 작성하세요.

 [입력 조건]
  - 첫째 줄에 N, M 이 주어진다. (1 <= N <= 100, 1 <= M <= 10,000)
  - 이후 N 개 줄에는 각 화폐의 가치가 주어진다. 화폐의 가치는 10,000 보다 작거나 같은 자연수이다.

 [출력 조건]
  - 첫째 줄에 최소 화폐 개수를 출력한다. (불가능일 때는 -1 출력)

 [입력 예시]
  2 15
  2
  3

 [출력 예시]
  5

"""

n, m = map(int, input().split())

# DP 테이블 초기화
d = [10001] * (m + 1)
d[0] = 0

coin = []

for x in range(n):
    coin.append(int(input()))

# 화폐 단위 하나하나에 대하여 DP 테이블 갱신 (Bottom - Up)
for i in range(n):
    for j in range(coin[i], m + 1):
        if d[j - coin[i]] != 10001:  # (i - k) 원을 만드는 방법이 존재하는 경우
            d[j] = min(d[j], d[j - coin[i]] + 1)

if d[m] == 10001:
    print(-1)
else:
    print(d[m])
